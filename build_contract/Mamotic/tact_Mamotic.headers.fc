;;
;; Header files for Mamotic
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_crc16
(slice) __tact_crc16(slice data) inline_ref;

;; __tact_base64_encode
(slice) __tact_base64_encode(slice data) inline_ref;

;; __tact_address_to_user_friendly
(slice) __tact_address_to_user_friendly(slice address) inline_ref;

;; __tact_debug_address
() __tact_debug_address(slice address, slice debug_print) impure inline_ref;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_dict_get_int_slice
slice __tact_dict_get_int_slice(cell d, int kl, int k) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Buy$_load
(slice, ((cell))) $Buy$_load(slice sc_0) inline;

;; $Mamotic$_store
builder $Mamotic$_store(builder build_0, (int, slice, slice, int, int, cell, cell, int, slice) v) inline;

;; $Mamotic$_load
(slice, ((int, slice, slice, int, int, cell, cell, int, slice))) $Mamotic$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Mamotic$init$_load
(slice, ((slice, slice, int, int))) $Mamotic$init$_load(slice sc_0) inline;

;; $Mamotic$_contract_init
(int, slice, slice, int, int, cell, cell, int, slice) $Mamotic$_contract_init(slice $payeer, slice $comission, int $percentPayeer, int $percentComission) impure inline_ref;

;; $Mamotic$_contract_load
(int, slice, slice, int, int, cell, cell, int, slice) $Mamotic$_contract_load() impure inline_ref;

;; $Mamotic$_contract_store
() $Mamotic$_contract_store((int, slice, slice, int, int, cell, cell, int, slice) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Mamotic$_fun_balance
((int, slice, slice, int, int, cell, cell, int, slice), int) $Mamotic$_fun_balance((int, slice, slice, int, int, cell, cell, int, slice) $self) impure inline_ref;

;; $Mamotic$_fun_id
((int, slice, slice, int, int, cell, cell, int, slice), int) $Mamotic$_fun_id((int, slice, slice, int, int, cell, cell, int, slice) $self) impure inline_ref;

;; $Mamotic$_fun_user
((int, slice, slice, int, int, cell, cell, int, slice), int) $Mamotic$_fun_user((int, slice, slice, int, int, cell, cell, int, slice) $self, slice $addr) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Mamotic$_fun_forward
((int, slice, slice, int, int, cell, cell, int, slice), ()) $Mamotic$_fun_forward((int, slice, slice, int, int, cell, cell, int, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Mamotic$_fun_reply
((int, slice, slice, int, int, cell, cell, int, slice), ()) $Mamotic$_fun_reply((int, slice, slice, int, int, cell, cell, int, slice) $self, cell $body) impure inline;

;; $Mamotic$_fun_notify
((int, slice, slice, int, int, cell, cell, int, slice), ()) $Mamotic$_fun_notify((int, slice, slice, int, int, cell, cell, int, slice) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_bounce_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
