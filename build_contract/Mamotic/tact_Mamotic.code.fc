#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_Mamotic.headers.fc";
#include "tact_Mamotic.stdlib.fc";
#include "tact_Mamotic.constants.fc";
#include "tact_Mamotic.storage.fc";

;;
;; Contract Mamotic functions
;;

(int, slice, slice, int, int, cell, cell, int, slice, slice) $Mamotic$_contract_init(slice $payeer, slice $comission, int $percentPayeer, int $percentComission) impure inline_ref {
    var (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)) = (5468, null(), null(), null(), null(), null(), null(), 0, null(), null());
    $self'owner = __tact_context_get_sender();
    $self'users = null();
    $self'payeer = $payeer;
    $self'comission = $comission;
    $self'percentPayeer = $percentPayeer;
    $self'percentComission = $percentComission;
    $self'passkey = __gen_slice_string_45b5bf9678a3d12d07421725bc139ebd0af09ed83ad117d0cdc54ed5edde6649();
    $self'percentsReferals~__tact_dict_set_int_int(257, $self'countPercentsReferals, 500, 257);
    $self'countPercentsReferals = ($self'countPercentsReferals + 1);
    repeat (5) {
        $self'percentsReferals~__tact_dict_set_int_int(257, $self'countPercentsReferals, 200, 257);
        $self'countPercentsReferals = ($self'countPercentsReferals + 1);
    }
    return ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey);
}

((int, slice, slice, int, int, cell, cell, int, slice, slice), int) $Mamotic$_fun_balance((int, slice, slice, int, int, cell, cell, int, slice, slice) $self) impure inline_ref {
    var (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)) = $self;
    return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), __tact_my_balance());
}

((int, slice, slice, int, int, cell, cell, int, slice, slice), int) $Mamotic$_fun_id((int, slice, slice, int, int, cell, cell, int, slice, slice) $self) impure inline_ref {
    var (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)) = $self;
    return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), $self'id);
}

((int, slice, slice, int, int, cell, cell, int, slice, slice), int) $Mamotic$_fun_user((int, slice, slice, int, int, cell, cell, int, slice, slice) $self, slice $addr) impure inline_ref {
    var (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)) = $self;
    if ((~ null?(__tact_dict_get_slice_int($self'users, 267, $addr, 257)))) {
        return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), __tact_not_null(__tact_dict_get_slice_int($self'users, 267, $addr, 257)));
    } else {
        return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), 0);
    }
}

;;
;; Receivers of a Contract Mamotic
;;

(((int, slice, slice, int, int, cell, cell, int, slice, slice)), ()) %$Mamotic$_internal_empty((int, slice, slice, int, int, cell, cell, int, slice, slice) $self) impure inline {
    var ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey) = $self;
    return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), ());
}

((int, slice, slice, int, int, cell, cell, int, slice, slice), ()) $Mamotic$_internal_text_beb2935a82089b154d32f99c4377aa960aa115366cc2c602755e36b97f505cec((int, slice, slice, int, int, cell, cell, int, slice, slice) $self) impure inline {
    var ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey) = $self;
    throw_unless(53979, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_context_get_sender(), true, ((__tact_my_balance() - $Context$_get_value(__tact_context_get())) - 10000000), 2));
    ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)~$Mamotic$_fun_reply(__gen_cell_comment_ebe732e8927f1cb0883913265f3bcd19cf5b0344ef0d13cf625545695091e929());
    return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), ());
}

(((int, slice, slice, int, int, cell, cell, int, slice, slice)), ()) $Mamotic$_internal_binary_WithdrawOwner((int, slice, slice, int, int, cell, cell, int, slice, slice) $self, (int) $msg) impure inline {
    var ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey) = $self;
    var ($msg'amount) = $msg;
    throw_unless(53979, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_context_get_sender(), true, ((__tact_my_balance() - $msg'amount) - 10000000), 2));
    ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)~$Mamotic$_fun_reply(__gen_cell_comment_ebe732e8927f1cb0883913265f3bcd19cf5b0344ef0d13cf625545695091e929());
    return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), ());
}

(((int, slice, slice, int, int, cell, cell, int, slice, slice)), ()) $Mamotic$_internal_binary_WithdrawPercents((int, slice, slice, int, int, cell, cell, int, slice, slice) $self, (int, slice) $msg) impure inline {
    var ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey) = $self;
    var ($msg'amount, $msg'passkey) = $msg;
    throw_unless(30483, __tact_slice_eq($msg'passkey, $self'passkey));
    throw_unless(7728, (__tact_my_balance() >= $msg'amount));
    $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_context_get_sender(), true, $msg'amount, 2));
    ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)~$Mamotic$_fun_reply(__gen_cell_comment_ebe732e8927f1cb0883913265f3bcd19cf5b0344ef0d13cf625545695091e929());
    return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), ());
}

(((int, slice, slice, int, int, cell, cell, int, slice, slice)), ()) $Mamotic$_internal_binary_Deploy((int, slice, slice, int, int, cell, cell, int, slice, slice) $self, (int) $deploy) impure inline {
    var ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey)~$Mamotic$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'id, $self'payeer, $self'comission, $self'percentPayeer, $self'percentComission, $self'users, $self'percentsReferals, $self'countPercentsReferals, $self'owner, $self'passkey), ());
}

;;
;; Get methods of a Contract Mamotic
;;

_ %balance() method_id(104128) {
    var self = $Mamotic$_contract_load();
    var res = self~$Mamotic$_fun_balance();
    return res;
}

_ %id() method_id(105872) {
    var self = $Mamotic$_contract_load();
    var res = self~$Mamotic$_fun_id();
    return res;
}

_ %user(slice $$addr) method_id(120162) {
    slice $addr = __tact_verify_address($$addr);
    var self = $Mamotic$_contract_load();
    var res = self~$Mamotic$_fun_user($addr);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmdXmVn2BWU3tcSY6YNYY5shY5r9wo3Wg4HB8QfPizfugq";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Mamotic
;;

((int, slice, slice, int, int, cell, cell, int, slice, slice), int) $Mamotic$_contract_router_internal((int, slice, slice, int, int, cell, cell, int, slice, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$Mamotic$_internal_empty();
        return (self, true);
    }
    
    ;; Receive WithdrawOwner message
    if (op == 3504909737) {
        var msg = in_msg~$WithdrawOwner$_load();
        self~$Mamotic$_internal_binary_WithdrawOwner(msg);
        return (self, true);
    }
    
    ;; Receive WithdrawPercents message
    if (op == 403408047) {
        var msg = in_msg~$WithdrawPercents$_load();
        self~$Mamotic$_internal_binary_WithdrawPercents(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$Mamotic$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "withdraw safe" message
        if (text_op == 0xbeb2935a82089b154d32f99c4377aa960aa115366cc2c602755e36b97f505cec) {
            self~$Mamotic$_internal_text_beb2935a82089b154d32f99c4377aa960aa115366cc2c602755e36b97f505cec();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Mamotic$_contract_load();
    
    ;; Handle operation
    int handled = self~$Mamotic$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Mamotic$_contract_store(self);
}
